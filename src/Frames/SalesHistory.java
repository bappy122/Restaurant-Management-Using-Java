package Frames;

import Database.DbConnection;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author BAPPY
 */
public class SalesHistory extends javax.swing.JFrame {
    PreparedStatement pst = null;
    Connection con = null;
    ResultSet rs = null;

    /**
     * Creates new form SalesHistory
     */
    public SalesHistory() {
        initComponents();
        setTitle("Sales History");
        con = DbConnection.dbConnector(); 
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableHistory = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        buttonBack = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        txtSearchKey = new javax.swing.JTextField();
        buttonSearch = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        buttonFullHistory = new javax.swing.JButton();
        txtSortFrom = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtSortTo = new javax.swing.JTextField();
        buttonDateSort = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtColumn = new javax.swing.JTextField();
        buttonFind = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tableHistory.setAutoCreateRowSorter(true);
        tableHistory.setBackground(new java.awt.Color(0, 204, 204));
        tableHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Code", "Name", "Category", "Price", "Quantity", "ST-Price", "Discount(%)", "Date", "Time", "TableNo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableHistory);
        if (tableHistory.getColumnModel().getColumnCount() > 0) {
            tableHistory.getColumnModel().getColumn(0).setResizable(false);
            tableHistory.getColumnModel().getColumn(1).setResizable(false);
            tableHistory.getColumnModel().getColumn(2).setResizable(false);
            tableHistory.getColumnModel().getColumn(3).setResizable(false);
            tableHistory.getColumnModel().getColumn(4).setResizable(false);
            tableHistory.getColumnModel().getColumn(5).setResizable(false);
            tableHistory.getColumnModel().getColumn(6).setResizable(false);
            tableHistory.getColumnModel().getColumn(7).setResizable(false);
            tableHistory.getColumnModel().getColumn(8).setResizable(false);
            tableHistory.getColumnModel().getColumn(9).setResizable(false);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 990, 340));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Sales History");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 10, -1, -1));

        buttonBack.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        buttonBack.setText("Back");
        buttonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBackActionPerformed(evt);
            }
        });
        buttonBack.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                buttonBackKeyPressed(evt);
            }
        });
        jPanel1.add(buttonBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 620, 80, 34));

        jPanel5.setBackground(new java.awt.Color(0, 102, 102));
        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtSearchKey.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtSearchKey.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSearchKeyKeyPressed(evt);
            }
        });

        buttonSearch.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        buttonSearch.setText("Search");
        buttonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSearchActionPerformed(evt);
            }
        });
        buttonSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                buttonSearchKeyPressed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText(" Search by Keywords");

        buttonFullHistory.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        buttonFullHistory.setText("Full History");
        buttonFullHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonFullHistoryActionPerformed(evt);
            }
        });
        buttonFullHistory.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                buttonFullHistoryKeyPressed(evt);
            }
        });

        txtSortFrom.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtSortFrom.setText("yyy-mm-dd");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("From");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("To");

        txtSortTo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtSortTo.setText("yyy-mm-dd");
        txtSortTo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSortToActionPerformed(evt);
            }
        });

        buttonDateSort.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        buttonDateSort.setText("Sort");
        buttonDateSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDateSortActionPerformed(evt);
            }
        });
        buttonDateSort.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                buttonDateSortKeyPressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Search By Date");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Table/Price/Category/Product Code");

        txtColumn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtColumnKeyPressed(evt);
            }
        });

        buttonFind.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        buttonFind.setText("Find");
        buttonFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonFindActionPerformed(evt);
            }
        });
        buttonFind.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                buttonFindKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtSortFrom, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                        .addComponent(txtSortTo))
                    .addComponent(buttonDateSort, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(78, 78, 78)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtColumn)
                    .addComponent(buttonFind, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 105, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(210, 210, 210))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSearchKey, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttonSearch))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                        .addComponent(buttonFullHistory)
                        .addGap(46, 46, 46))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSortFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSortTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addComponent(buttonDateSort, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel13)))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSearchKey, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtColumn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonFind, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttonSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(buttonFullHistory, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 990, -1));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Frames/background.jpg"))); // NOI18N
        jLabel7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jLabel7KeyPressed(evt);
            }
        });
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -6, 1010, 690));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 686, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtSortToActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSortToActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSortToActionPerformed

    private void buttonFullHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonFullHistoryActionPerformed
        // TODO add your handling code here:
        
        try
        {
            String sql = "Select * From SalesHistory order by date desc ";
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();

            DefaultTableModel model = new DefaultTableModel(new String[]{"Code", "Name", "Category", "Price","Quantity","ST-Price","Discount(%)","Date","Time","TableNo"}, 0);
            
            while(rs.next())
            {
                String col1 = rs.getString("Code");
                String col2 = rs.getString("Name");
                String col3 = rs.getString("Category");
                String col4 = rs.getString("Price");
                String col5 = rs.getString("Quantity");
                String col6 = rs.getString("SubTotalPrice");
                String col7 = rs.getString("TableNo");
                String col8 = rs.getString("Date");
                String col9 = rs.getString("Time");
                String col10 = rs.getString("Discount");
                model.addRow(new Object[]{col1, col2, col3, col4,col5,col6,col10,col8,col9,col7});
            }
            tableHistory.setModel(model);
            pst.close();
            this.refresh();

        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
        
    }//GEN-LAST:event_buttonFullHistoryActionPerformed

    private void buttonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSearchActionPerformed
        // TODO add your handling code here:
        
        try
        {
            
            String sql = "Select * From SalesHistory where code like \""+"%"+txtSearchKey.getText()+"%"+"\" or  tableno like \""+"%"+txtSearchKey.getText()+"%"+"\" or Quantity like \""+"%"+txtSearchKey.getText()+"%"+"\" or Price like \""+"%"+txtSearchKey.getText()+"%"+"\" or Name like \""+"%"+txtSearchKey.getText()+"%"+"\" or Date like \""+"%"+txtSearchKey.getText()+"%"+"\"   or Time like \""+"%"+txtSearchKey.getText()+"%"+"\"  or Category like \""+"%"+txtSearchKey.getText()+"%"+"\"  or Discount like \""+"%"+txtSearchKey.getText()+"%"+"\"";
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();

            DefaultTableModel model = new DefaultTableModel(new String[]{"Code", "Name", "Category", "Price","Quantity","ST-Price","Discount","Date","Time","TableNo"}, 0);
            
            while(rs.next())
            {
                String col1 = rs.getString("Code");
                String col2 = rs.getString("Name");
                String col3 = rs.getString("Category");
                String col4 = rs.getString("Price");
                String col5 = rs.getString("Quantity");
                String col6 = rs.getString("SubTotalPrice");
                String col7 = rs.getString("TableNo");
                String col8 = rs.getString("Date");
                String col9 = rs.getString("Time");
                String col10 = rs.getString("Discount");
                model.addRow(new Object[]{col1, col2, col3, col4,col5,col6,col10,col8,col9,col7});
            }
            tableHistory.setModel(model);
            pst.close();
            rs.close();
            txtSortFrom.setText("yyy-mm-dd");
            txtSortTo.setText("yyy-mm-dd");
            txtColumn.setText("");

        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
        
    }//GEN-LAST:event_buttonSearchActionPerformed

    private void buttonDateSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDateSortActionPerformed
        // TODO add your handling code here:
        
        try
        {
            String sql = "Select * From SalesHistory where date<= \""+txtSortTo.getText()+"\" and date>= \""+txtSortFrom.getText()+"\"";
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();

            DefaultTableModel model = new DefaultTableModel(new String[]{"Code", "Name", "Category", "Price","Quantity","ST-Price","Discount(%)","Date","Time","TableNo"}, 0);
            
            while(rs.next())
            {
                String col1 = rs.getString("Code");
                String col2 = rs.getString("Name");
                String col3 = rs.getString("Category");
                String col4 = rs.getString("Price");
                String col5 = rs.getString("Quantity");
                String col6 = rs.getString("SubTotalPrice");
                String col7 = rs.getString("TableNo");
                String col8 = rs.getString("Date");
                String col9 = rs.getString("Time");
                String col10 = rs.getString("Discount");
                model.addRow(new Object[]{col1, col2, col3, col4,col5,col6,col10,col8,col9,col7});
            }
            tableHistory.setModel(model);
            pst.close();
            txtColumn.setText("");
            txtSearchKey.setText("");

        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_buttonDateSortActionPerformed

    public void refresh()
    {
        txtSortFrom.setText("yyy-mm-dd");
        txtSortTo.setText("yyy-mm-dd");
        txtColumn.setText("");
        txtSearchKey.setText("");
    }
    private void buttonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBackActionPerformed
        // TODO add your handling code here:
        Features f = new Features();
        f.accountIdentifier();
        f.setVisible(true);        
        this.dispose();
    }//GEN-LAST:event_buttonBackActionPerformed

    private void buttonFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonFindActionPerformed
        // TODO add your handling code here:
        
        try
        {
            String sql = "Select * From SalesHistory where tableno= \""+txtColumn.getText()+"\" or category= \""+txtColumn.getText()+"\"or code =\""+txtColumn.getText()+"\"  or price = \""+txtColumn.getText()+"\"";
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();

            DefaultTableModel model = new DefaultTableModel(new String[]{"Code", "Name", "Category", "Price","Quantity","ST-Price","Discount(%)","Date","Time","TableNo"}, 0);
            
            while(rs.next())
            {
                String col1 = rs.getString("Code");
                String col2 = rs.getString("Name");
                String col3 = rs.getString("Category");
                String col4 = rs.getString("Price");
                String col5 = rs.getString("Quantity");
                String col6 = rs.getString("SubTotalPrice");
                String col7 = rs.getString("TableNo");
                String col8 = rs.getString("Date");
                String col9 = rs.getString("Time");
                String col10 = rs.getString("Discount");
                model.addRow(new Object[]{col1, col2, col3, col4,col5,col6,col10,col8,col9,col7});
            }
            tableHistory.setModel(model);
            pst.close();
            txtSortFrom.setText("yyy-mm-dd");
            txtSortTo.setText("yyy-mm-dd");
            txtSearchKey.setText("");
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
        
    }//GEN-LAST:event_buttonFindActionPerformed

    private void buttonDateSortKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buttonDateSortKeyPressed
        // TODO add your handling code here:
        if((int)evt.getKeyChar()==10)
        {
            this.buttonDateSortActionPerformed(null);
        }
    }//GEN-LAST:event_buttonDateSortKeyPressed

    private void buttonFindKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buttonFindKeyPressed
        // TODO add your handling code here:
        if((int)evt.getKeyChar()==10)
        {
            this.buttonFindActionPerformed(null);
        }
    }//GEN-LAST:event_buttonFindKeyPressed

    private void buttonSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buttonSearchKeyPressed
        // TODO add your handling code here:
        if((int)evt.getKeyChar()==10)
        {
            this.buttonSearchActionPerformed(null);
        }
    }//GEN-LAST:event_buttonSearchKeyPressed

    private void buttonFullHistoryKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buttonFullHistoryKeyPressed
        // TODO add your handling code here:
        if((int)evt.getKeyChar()==10)
        {
            this.buttonFullHistoryActionPerformed(null);
        }
    }//GEN-LAST:event_buttonFullHistoryKeyPressed

    private void buttonBackKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buttonBackKeyPressed
        // TODO add your handling code here:
        if((int)evt.getKeyChar()==10)
        {
            this.buttonBackActionPerformed(null);
        }
    }//GEN-LAST:event_buttonBackKeyPressed

    private void txtColumnKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtColumnKeyPressed
        // TODO add your handling code here:
        if((int)evt.getKeyChar()==10)
        {
            this.buttonFindActionPerformed(null);
        }
    }//GEN-LAST:event_txtColumnKeyPressed

    private void txtSearchKeyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyKeyPressed
        // TODO add your handling code here:
           if((int)evt.getKeyChar()==10)
        {
            this.buttonSearchActionPerformed(null);
        }
    }//GEN-LAST:event_txtSearchKeyKeyPressed

    private void jLabel7KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jLabel7KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel7KeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SalesHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SalesHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SalesHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SalesHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SalesHistory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBack;
    private javax.swing.JButton buttonDateSort;
    private javax.swing.JButton buttonFind;
    private javax.swing.JButton buttonFullHistory;
    private javax.swing.JButton buttonSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableHistory;
    private javax.swing.JTextField txtColumn;
    private javax.swing.JTextField txtSearchKey;
    private javax.swing.JTextField txtSortFrom;
    private javax.swing.JTextField txtSortTo;
    // End of variables declaration//GEN-END:variables
}
