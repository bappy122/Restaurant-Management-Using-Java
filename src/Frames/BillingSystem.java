package Frames;

import Database.DbConnection;
import static com.sun.org.apache.xalan.internal.lib.ExsltDatetime.date;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author BAPPY
 */
public class BillingSystem extends javax.swing.JFrame {
    
    PreparedStatement pst = null;
    Connection con = null;
    ResultSet rs = null;
    static int selectedRow;
    private boolean orderRowSelected = false;
    private String quantity;
    private String tableNo;
    
    /**
     * Creates new form BillingSystem
     */
    public BillingSystem() {
        initComponents();
        setTitle("Billing System");
        this.setLocationRelativeTo(null);
        con = DbConnection.dbConnector();
        //JOptionPane.showMessageDialog(null, "Here");
        this.loadProducts();  
        this.truncateOrder();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    
    
    
    
    private boolean orderTableRowSelected()
    {
        return orderRowSelected;
    }
    
    private void truncateOrder()
    {
        try
        {
            con = DbConnection.dbConnector();
            pst = con.prepareStatement("delete from OrderedProducts");
            int i = pst.executeUpdate();
            pst.close();
            rs.close();
        } 
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
         
    }
    
    private void loadOrder()
    {
        try
        {
            String sql = "Select * From OrderedProducts order by ProductCode";
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();

            DefaultTableModel model = new DefaultTableModel(new String[]{"Code", "Food Name", "Food Category", "Price","Quantity"}, 0);
                            
            while(rs.next())
            {
                String col1 = rs.getString("ProductCode");
                String col2 = rs.getString("ProductName");
                String col3 = rs.getString("ProductCategory");
                String col4 = rs.getString("ProductPrice");
                String col5 = rs.getString("ProductQuantity");
                //String col6 = rs.getString("SubTotalPrice");
                model.addRow(new Object[]{col1, col2, col3, col4,col5});
            }
                             
            tableOrder.setModel(model);
            pst.close();
            rs.close();
           // con.close();

        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
            
        }
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableProducts = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        buttonBack = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableOrder = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        buttonAddOrder = new javax.swing.JButton();
        buttonRefresh = new javax.swing.JButton();
        txtCodeEntry = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtDiscount = new javax.swing.JTextField();
        buttonPrintBill = new javax.swing.JButton();
        buttonRemove = new javax.swing.JButton();
        buttonNewOrder = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tableProducts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Code", "Food Name", "Food Category", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableProducts.getTableHeader().setReorderingAllowed(false);
        tableProducts.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableProductsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableProducts);
        if (tableProducts.getColumnModel().getColumnCount() > 0) {
            tableProducts.getColumnModel().getColumn(0).setResizable(false);
            tableProducts.getColumnModel().getColumn(1).setResizable(false);
            tableProducts.getColumnModel().getColumn(2).setResizable(false);
            tableProducts.getColumnModel().getColumn(3).setResizable(false);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 680, 231));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Billing System");
        jLabel1.setToolTipText("");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 10, -1, -1));

        buttonBack.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        buttonBack.setText("Back");
        buttonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBackActionPerformed(evt);
            }
        });
        buttonBack.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                buttonBackKeyPressed(evt);
            }
        });
        jPanel1.add(buttonBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 640, 99, 36));

        tableOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Code", "Food Name", "Food Category", "Price", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableOrder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableOrderMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableOrder);
        if (tableOrder.getColumnModel().getColumnCount() > 0) {
            tableOrder.getColumnModel().getColumn(0).setResizable(false);
            tableOrder.getColumnModel().getColumn(1).setResizable(false);
            tableOrder.getColumnModel().getColumn(2).setResizable(false);
            tableOrder.getColumnModel().getColumn(3).setResizable(false);
            tableOrder.getColumnModel().getColumn(4).setResizable(false);
        }

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 376, 680, 238));

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        buttonAddOrder.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        buttonAddOrder.setText("Add to Order");
        buttonAddOrder.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        buttonAddOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddOrderActionPerformed(evt);
            }
        });
        buttonAddOrder.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                buttonAddOrderKeyPressed(evt);
            }
        });

        buttonRefresh.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        buttonRefresh.setText("Refresh");
        buttonRefresh.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        buttonRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRefreshActionPerformed(evt);
            }
        });
        buttonRefresh.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                buttonRefreshKeyPressed(evt);
            }
        });

        txtCodeEntry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodeEntryActionPerformed(evt);
            }
        });
        txtCodeEntry.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodeEntryKeyPressed(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(0, 0, 0));
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText(" Product Code");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCodeEntry, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(buttonAddOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(buttonRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCodeEntry, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(buttonAddOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(buttonRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 100, 194, -1));

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setForeground(new java.awt.Color(255, 255, 255));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText(" Discount ( if any )");

        txtDiscount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDiscountActionPerformed(evt);
            }
        });

        buttonPrintBill.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        buttonPrintBill.setText("Print Bill");
        buttonPrintBill.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        buttonPrintBill.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                buttonPrintBillMouseMoved(evt);
            }
        });
        buttonPrintBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPrintBillActionPerformed(evt);
            }
        });
        buttonPrintBill.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                buttonPrintBillKeyPressed(evt);
            }
        });

        buttonRemove.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        buttonRemove.setText("Remove");
        buttonRemove.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        buttonRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRemoveActionPerformed(evt);
            }
        });
        buttonRemove.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                buttonRemoveKeyPressed(evt);
            }
        });

        buttonNewOrder.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        buttonNewOrder.setText("Cancel & New Order");
        buttonNewOrder.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        buttonNewOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNewOrderActionPerformed(evt);
            }
        });
        buttonNewOrder.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                buttonNewOrderKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtDiscount)
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(buttonNewOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(buttonRemove, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(buttonPrintBill, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)))
                        .addGap(0, 41, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDiscount, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buttonRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(buttonPrintBill, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(buttonNewOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 370, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Menu");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 70, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Ordered Items");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 350, -1, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Frames/background.jpg"))); // NOI18N
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 960, 700));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 961, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBackActionPerformed
        // TODO add your handling code here:
        Features f = new Features();
        f.setVisible(true);
        this.dispose();
        f.accountIdentifier();
        
    }//GEN-LAST:event_buttonBackActionPerformed

    private void buttonRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRefreshActionPerformed
        // TODO add your handling code here:
        this.loadProducts();
        this.loadOrder();
        txtCodeEntry.setText("");
        this.orderRowSelected=false;
    }//GEN-LAST:event_buttonRefreshActionPerformed

    private void buttonPrintBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPrintBillActionPerformed
        
        tableNo = JOptionPane.showInputDialog(null, "Please Enter Table Number...!");
        try
        {
            String sql = "Select * From OrderedProducts";
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            
            while(rs.next())
            {
                String col1 = rs.getString("ProductCode");
                String col2 = rs.getString("ProductName");
                String col3 = rs.getString("ProductCategory");
                String col4 = rs.getString("ProductPrice");
                String col5 = rs.getString("ProductQuantity");
                String col6 = rs.getString("SubTotalPrice");
                
                // current time 
                
                DateFormat dateFormat = new SimpleDateFormat("hh:mma");
                Date date = new Date();
                String time = dateFormat.format(date);
                
                //discount
                if(txtDiscount.getText().equals(""))
                {
                    {
                        //initializing discount
                        Bill b = new Bill();
                        b.discount ="0";
                    }
                    
                    pst = con.prepareStatement("INSERT INTO SalesHistory VALUES (?,?,?,?,?,?,?,CURRENT_DATE,\""+time+"\",'0')");
                    pst.setString(1, col1);
                    pst.setString(2, col2);
                    pst.setString(3, col3);
                    pst.setString(4, col4);
                    pst.setString(5, col5);
                    pst.setString(6, col6);
                    pst.setString(7, tableNo);
                    pst.executeUpdate();
                    
                    pst.close();
                    rs.close();
                    
                    Bill b = new Bill();
                    b.setVisible(true);
                    //this.truncateOrder();
                    this.loadOrder();
                    this.orderRowSelected=false;
                    this.dispose();
                   
                }
                else
                {
                    try
                    {
                        int temp = Integer.parseInt(txtDiscount.getText());
                        {
                            //initializing discount
                            Bill b = new Bill();
                            b.discount =String.valueOf(temp);
                        }
                        pst = con.prepareStatement("INSERT INTO SalesHistory VALUES (?,?,?,?,?,?,?,CURRENT_DATE,\""+time+"\",\""+String.valueOf(txtDiscount.getText())+"\")");
                        pst.setString(1, col1);
                        pst.setString(2, col2);
                        pst.setString(3, col3);
                        pst.setString(4, col4);
                        pst.setString(5, col5);
                        pst.setString(6, col6);
                        pst.setString(7, tableNo);
                        pst.executeUpdate();
                        
                        pst.close();
                        rs.close();
                        
                        Bill b = new Bill();
                        b.setVisible(true);
                        //this.truncateOrder();
                        this.loadOrder();
                        this.orderRowSelected=false;
                        this.dispose();
                         
                    }
                    catch(Exception e)
                    {
                        JOptionPane.showMessageDialog(null, "Invalid Discount Quantity...!");
                    }
                      
                }
            } 
            
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
            
        }
     
    
       
    }//GEN-LAST:event_buttonPrintBillActionPerformed

    private void buttonPrintBillMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonPrintBillMouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonPrintBillMouseMoved

    private void buttonAddOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddOrderActionPerformed
        // TODO add your handling code here:
        
    if(this.orderTableRowSelected())
    {
        quantity = JOptionPane.showInputDialog(null, "Enter Product Quantity !");
        
        if(quantity.equals("")||quantity.equals("0"))
        {
            JOptionPane.showMessageDialog(null, "Invalid Quantity !");
        }
        else
        {
            try
            {
                 int temp = Integer.parseInt(quantity);
                 
                try
                {
                    selectedRow = tableProducts.getSelectedRow();
                    String pCode = (tableProducts.getModel().getValueAt(selectedRow, 0).toString());
                    String pName = (tableProducts.getModel().getValueAt(selectedRow, 1).toString());
                    String pCategory = (tableProducts.getModel().getValueAt(selectedRow, 2).toString());
                    String pPrice = (tableProducts.getModel().getValueAt(selectedRow, 3).toString());
                    String pQuantity = quantity;
                    //Calculating Sub-Total price
                    double  price= Double.parseDouble(pPrice)*Double.parseDouble(pQuantity);
                    String subTotalPrice = String.valueOf(price );

                    pst = con.prepareStatement("INSERT INTO OrderedProducts VALUES (?,?,?,?,?,?)");
                    pst.setString(1, pCode);
                    pst.setString(2, pName);
                    pst.setString(3, pCategory);
                    pst.setString(4, pPrice);
                    pst.setString(5, pQuantity);
                    pst.setString(6, subTotalPrice);
                    int i = pst.executeUpdate();

                    if(i>0)
                    {
                        this.loadOrder(); 
                        pst.close();
                        rs.close();
                            //con.close();
                    }
                     else
                    {
                        JOptionPane.showMessageDialog(null, "Failed to add Product!");
                        pst.close();
                        rs.close();
                        // con.close();
                    }
                }
                catch (Exception e)
                {
                    JOptionPane.showMessageDialog(null, "Product already added...!");
                }     
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, "Invalid Quantity !");
            }  
        }
        
        this.buttonRefreshActionPerformed(evt);
  
    }
    else if(!txtCodeEntry.getText().equals(""))
    {
 
        String pCode = null;
        String pName = null;
        String pCategory = null;
        String pPrice = null;
        String pQuantity;
        
        if(txtCodeEntry.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "Please Enter Product Code....!");
        }
        else
        {
            pQuantity = JOptionPane.showInputDialog(null, "Enter Product Quantity !");
            if(pQuantity.equals("")|| pQuantity.equals("0"))
            {
                JOptionPane.showMessageDialog(null, "Invalid Quantity !");
            }
            else
            {
                try
                {
                    int temp = Integer.parseInt(pQuantity);
                    
                       try
                    {
                
                        String sql = "Select * From Products where ProductCode = \""+txtCodeEntry.getText()+"\"";
                        pst = con.prepareStatement(sql);
                        rs = pst.executeQuery();
           
                        while(rs.next())
                        {   
                           
                            pCode = rs.getString("ProductCode");
                            pName = rs.getString("ProductName");
                            pCategory = rs.getString("ProductCategory");
                            pPrice = rs.getString("ProductPrice");
                        }   
 
                        double  price= Double.parseDouble(pPrice)*Double.parseDouble(pQuantity);
                        String subTotalPrice = String.valueOf(price);
            
                        try
                        {   
                            pst = con.prepareStatement("INSERT INTO OrderedProducts VALUES (?,?,?,?,?,?)");
                            pst.setString(1, pCode);
                            pst.setString(2, pName);
                             pst.setString(3, pCategory);
                            pst.setString(4, pPrice);
                            pst.setString(5, pQuantity);
                            pst.setString(6, subTotalPrice);
                            int i = pst.executeUpdate();

                            if(i>0)
                            {
                                this.loadOrder(); 
                                pst.close();
                                rs.close();
                            }
                            else
                            {
                                JOptionPane.showMessageDialog(null, "Failed to add Product!");
                                pst.close();
                                rs.close();
                            }
                        }
                        catch(Exception e)
                        {
                            JOptionPane.showMessageDialog(null, "Product Already Added");
                        }
                    }
                    catch (Exception e)
                    {
                        JOptionPane.showMessageDialog(null,"Product Code Didnt Match...!");
                    }
                    
                }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(null, "Invalid Quantity !");
                }
            }          
        }
    }
    else
    {
        JOptionPane.showMessageDialog(null,"Select an Item from the Menu\nor Enter Product Code to Place an order!");
    }

    }//GEN-LAST:event_buttonAddOrderActionPerformed

    private void txtDiscountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDiscountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDiscountActionPerformed

    private void buttonRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRemoveActionPerformed
        // TODO add your handling code here:
        if(!this.orderTableRowSelected())
        {
            JOptionPane.showMessageDialog(null,"Select a Row from Order Table to Remove...!");
        }
        else
        {
            {
                selectedRow = tableOrder.getSelectedRow();
                String pCode = (tableOrder.getModel().getValueAt(selectedRow, 0).toString());
                try
                {
                    String sql = "Delete FROM OrderedProducts where ProductCode=\""+pCode+"\"";
                    pst = con.prepareStatement(sql);
                    pst.executeUpdate();
                    this.buttonRefreshActionPerformed(evt);
                    pst.close();
                    rs.close();
                }
                catch(Exception e)
                {
                     JOptionPane.showMessageDialog(null,e);
                }
            }
        }
    }//GEN-LAST:event_buttonRemoveActionPerformed

    private void tableOrderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableOrderMouseClicked
        // TODO add your handling code here:
        this.orderRowSelected = true;
    }//GEN-LAST:event_tableOrderMouseClicked

    private void txtCodeEntryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodeEntryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodeEntryActionPerformed

    private void tableProductsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableProductsMouseClicked
        // TODO add your handling code here:
        this.orderRowSelected = true;
        txtCodeEntry.setText("");
    }//GEN-LAST:event_tableProductsMouseClicked

    private void buttonNewOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNewOrderActionPerformed
        // TODO add your handling code here:
        this.truncateOrder();
        this.buttonRefreshActionPerformed(evt);
    }//GEN-LAST:event_buttonNewOrderActionPerformed

    private void buttonAddOrderKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buttonAddOrderKeyPressed
        // TODO add your handling code here:
        if((int)evt.getKeyChar()==10)
        {
            this.buttonAddOrderActionPerformed(null);
        }
    }//GEN-LAST:event_buttonAddOrderKeyPressed

    private void buttonRefreshKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buttonRefreshKeyPressed
        // TODO add your handling code here:
         if((int)evt.getKeyChar()==10)
        {
            this.buttonRefreshActionPerformed(null);
        }
    }//GEN-LAST:event_buttonRefreshKeyPressed

    private void buttonRemoveKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buttonRemoveKeyPressed
        // TODO add your handling code here:
        if((int)evt.getKeyChar()==10)
        {
            this.buttonRemoveActionPerformed(null);
        }
    }//GEN-LAST:event_buttonRemoveKeyPressed

    private void buttonPrintBillKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buttonPrintBillKeyPressed
        // TODO add your handling code here:
        if((int)evt.getKeyChar()==10)
        {
            this.buttonPrintBillActionPerformed(null);
        }
    }//GEN-LAST:event_buttonPrintBillKeyPressed

    private void buttonNewOrderKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buttonNewOrderKeyPressed
        // TODO add your handling code here:
         if((int)evt.getKeyChar()==10)
        {
            this.buttonNewOrderActionPerformed(null);
        }
    }//GEN-LAST:event_buttonNewOrderKeyPressed

    private void buttonBackKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buttonBackKeyPressed
        // TODO add your handling code here:
        if((int)evt.getKeyChar()==10)
        {
            this.buttonBackActionPerformed(null);
        }
    }//GEN-LAST:event_buttonBackKeyPressed

    private void txtCodeEntryKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodeEntryKeyPressed
        // TODO add your handling code here:
        if((int)evt.getKeyChar()==10)
        {
            this.buttonAddOrderActionPerformed(null);
        }
    }//GEN-LAST:event_txtCodeEntryKeyPressed
        
    private void loadProducts()
    {
         try
        {
            String sql = "Select * From Products order by ProductCode";
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();

            DefaultTableModel model = new DefaultTableModel(new String[]{"Code", "Food Name", "Food Category", "Price"}, 0);

            while(rs.next())
            {
                String col1 = rs.getString("ProductCode");
                String col2 = rs.getString("ProductName");
                String col3 = rs.getString("ProductCategory");
                String col4 = rs.getString("ProductPrice");
                model.addRow(new Object[]{col1, col2, col3, col4});
            }
            tableProducts.setModel(model);
            pst.close();
            rs.close();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BillingSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BillingSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BillingSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BillingSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BillingSystem().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAddOrder;
    private javax.swing.JButton buttonBack;
    private javax.swing.JButton buttonNewOrder;
    private javax.swing.JButton buttonPrintBill;
    private javax.swing.JButton buttonRefresh;
    private javax.swing.JButton buttonRemove;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tableOrder;
    private javax.swing.JTable tableProducts;
    private javax.swing.JTextField txtCodeEntry;
    private javax.swing.JTextField txtDiscount;
    // End of variables declaration//GEN-END:variables
}
